/*
 * This file is generated by jOOQ.
 */
package com.adverity.challenge.adverity.database;


import com.adverity.challenge.adverity.database.tables.AggregateDfntn;
import com.adverity.challenge.adverity.database.tables.CalendarDim;
import com.adverity.challenge.adverity.database.tables.CampaignDim;
import com.adverity.challenge.adverity.database.tables.DatasourceDim;
import com.adverity.challenge.adverity.database.tables.Ifact;
import com.adverity.challenge.adverity.database.tables.IfactAggregate;
import com.adverity.challenge.adverity.database.tables.MetricsDfntn;
import com.adverity.challenge.adverity.database.tables.MetricsFact;
import com.adverity.challenge.adverity.database.tables.records.AggregateDfntnRecord;
import com.adverity.challenge.adverity.database.tables.records.CalendarDimRecord;
import com.adverity.challenge.adverity.database.tables.records.CampaignDimRecord;
import com.adverity.challenge.adverity.database.tables.records.DatasourceDimRecord;
import com.adverity.challenge.adverity.database.tables.records.IfactAggregateRecord;
import com.adverity.challenge.adverity.database.tables.records.IfactRecord;
import com.adverity.challenge.adverity.database.tables.records.MetricsDfntnRecord;
import com.adverity.challenge.adverity.database.tables.records.MetricsFactRecord;

import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in 
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AggregateDfntnRecord> PK_AGGREGATE_DFNTN = Internal.createUniqueKey(AggregateDfntn.AGGREGATE_DFNTN, DSL.name("PK_aggregate_dfntn"), new TableField[] { AggregateDfntn.AGGREGATE_DFNTN.ID }, true);
    public static final UniqueKey<CalendarDimRecord> PK_CALENDAR_DIM = Internal.createUniqueKey(CalendarDim.CALENDAR_DIM, DSL.name("PK_calendar_dim"), new TableField[] { CalendarDim.CALENDAR_DIM.ID }, true);
    public static final UniqueKey<CampaignDimRecord> PK_CAMPAIGN_DIM = Internal.createUniqueKey(CampaignDim.CAMPAIGN_DIM, DSL.name("PK_campaign_dim"), new TableField[] { CampaignDim.CAMPAIGN_DIM.ID }, true);
    public static final UniqueKey<DatasourceDimRecord> PK_DATASOURCE_DIM = Internal.createUniqueKey(DatasourceDim.DATASOURCE_DIM, DSL.name("PK_datasource_dim"), new TableField[] { DatasourceDim.DATASOURCE_DIM.ID }, true);
    public static final UniqueKey<IfactRecord> PK_IFACT = Internal.createUniqueKey(Ifact.IFACT, DSL.name("PK_ifact"), new TableField[] { Ifact.IFACT.ID }, true);
    public static final UniqueKey<IfactAggregateRecord> PK_IFACT_AGGREGATE = Internal.createUniqueKey(IfactAggregate.IFACT_AGGREGATE, DSL.name("PK_ifact_aggregate"), new TableField[] { IfactAggregate.IFACT_AGGREGATE.ID }, true);
    public static final UniqueKey<MetricsDfntnRecord> PK_METRICS_DFNTN = Internal.createUniqueKey(MetricsDfntn.METRICS_DFNTN, DSL.name("PK_metrics_dfntn"), new TableField[] { MetricsDfntn.METRICS_DFNTN.ID }, true);
    public static final UniqueKey<MetricsFactRecord> PK_METRICS_FACT = Internal.createUniqueKey(MetricsFact.METRICS_FACT, DSL.name("PK_metrics_fact"), new TableField[] { MetricsFact.METRICS_FACT.ID }, true);
}
